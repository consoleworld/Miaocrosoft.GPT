@inject IJSRuntime JS

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand collapse" href="">Miaocrosoft.GPT</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="nav-link navbar-brand navbar-toggler" href="#" @onclick="InstallApp">添加到桌面</a>
        @* <button type="button" @onclick="InstallApp" class="btn btn-light navbar-toggler">添加到桌面</button> *@
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @* <div class="nav-item px-3">
        <NavLink class="nav-link" href="counter">
        <span class="oi oi-plus" aria-hidden="true"></span> Counter
        </NavLink>
        </div>
        <div class="nav-item px-3">
        <NavLink class="nav-link" href="fetchdata">
        <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
        </NavLink>
        </div> *@
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool? ReadyToInstall = null;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!ReadyToInstall.HasValue)
        {
            ReadyToInstall = await JS.InvokeAsync<bool>("installer.installedOrUnsupported");
            StateHasChanged();
        }
        await base.OnInitializedAsync();
    }

    public async Task InstallApp()
    {
        await JS.InvokeVoidAsync("installer.installPrompt");
    }
}
